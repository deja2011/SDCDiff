# Usage: create_clock    # Create a clock object
#         -period period_value   (Clock period: 
#                                 Value >= 0)
#         [-name clock_name]     (Clock name)
#         [-waveform edge_list]  (Clock edge specification)
#         [-add]                 (Add to the existing clocks on source_objects)
#         [-comment comment]     (User specified comment)
#         [source_objects]       (Clock source ports, pins and/or nets)
# 
set opts%create_clock {
    -period str
    -name str
    -waveform str
    -add _noval
    -comment str
    nkwarg_0 pin
}

# Usage: create_generated_clock    # Create a generated clock object
#         [-name clock_name]     (Generated clock name)
#         -source master_pin     (Master clock source object pin/port)
#         [-edges edge_list]     (Edge specification)
#         [-divide_by divide_factor]
#                                (Frequency division factor: 
#                                 Value >= 0)
#         [-multiply_by multiply_factor]
#                                (Frequency multiplication factor: 
#                                 Value >= 0)
#         [-combinational]       (Divide_by 1 clock through combinational logic)
#         [-duty_cycle percent]  (Duty cycle for frequency multiplication: 
#                                 Range: 0 to 100)
#         [-invert]              (Invert the signal)
#         [-edge_shift edge_shift_list]
#                                (Edge shift specification)
#         [-add]                 (Add to the existing clocks on source_objects)
#         [-master_clock clock]  (Use this clock if multiple clocks present at master pin)
#         [-comment comment]     (User specified comment)
#         source_objects         (Generated clock source objects)
# 
set opts%create_generated_clock {
    -name str
    -source pin
    -edges str
    -divide_by str
    -multiply_by num
    -combinational _noval
    -duty_cycle str
    -invert _noval
    -edge_shift str
    -add _noval
    -master_clock clock
    -comment str
    nkwarg_0 clock
}

# Usage: group_path    # Groups paths for cost function calculations
#         [-name group_name]     (Name of the path group)
#         [-default]             (Move path into the default group)
#         [-weight weight_value] (Cost function weight: 
#                                 Range: 0 to 100)
#         [-critical_range range_value]
#                                (Delay range to include in cost function: 
#                                 Value >= 0)
#         [-priority integer]    (level to increase priority of this group_path)
#         [-comment comment]     (User specified comment)
#         [-from from_list]      (List of path startpoints or clocks)
#         [-rise_from rise_from_list]
#                                (Apply to paths rising from the list of startpoints or clocks)
#         [-fall_from fall_from_list]
#                                (Apply to paths falling from the list of startpoints or clocks)
#         [-through through_list]
#                                (List of through pins, ports, cells or nets)
#         [-rise_through rise_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-fall_through fall_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-to to_list]          (List of path endpoints or clocks)
#         [-rise_to rise_to_list]
#                                (Apply to paths with rise transition at the list of path endpoints or clocks)
#         [-fall_to fall_to_list]
#                                (Apply to paths with fall transition at the list of path endpoints or clocks)
# 
set opts%group_path {
    -name str
    -default _noval
    -weight num
    -critical_range num
    -priority str
    -comment str
    -from clock
    -rise_from clock
    -fall_from clock
    -through cell
    -rise_through cell
    -fall_through cell
    -to clock
    -rise_to clock
    -fall_to clock
}

# Usage: set_clock_gating_check    # Specify clock gating check values
#         [-setup setup_value]   (Clock gating setup time)
#         [-hold hold_value]     (Clock gating hold time)
#         [-rise]                (Only rise checks are considered)
#         [-fall]                (Only fall checks are considered)
#         [-high]                (Check is for the high level of the clock)
#         [-low]                 (Check is for the low level of the clock)
#         [object_list]          (List of clocks, ports, pins or cells)
# 
set opts%set_clock_gating_check {
    -setup num
    -hold num
    -rise _noval
    -fall _noval
    -high _noval
    -low _noval
    nkwarg_0 cell
}

# Usage: set_clock_groups    # Set exclusive or asynchronous clock groups
#         -group clock_list      (List of clocks)
#         [-physically_exclusive]
#                                (Specify physically exclusive clock groups)
#         [-logically_exclusive] (Specify logically exclusive clock groups)
#         [-asynchronous]        (Specify asynchronous clock groups)
#         [-allow_paths]         (Keep paths as constrained)
#         [-comment comment]     (User specified comment)
#         [-name name]           (Name for clock grouping)
# 
set opts%set_clock_groups {
    -group clock
    -physically_exclusive _noval
    -logically_exclusive _noval
    -asynchronous _noval
    -allow_paths _noval
    -comment str
    -name str
}

# Usage: set_clock_latency    # Capture actual or predicted clock latency
#         [-modes mode_list]     (set clock latency for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set clock latency for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set clock latency for these scenarios)
#         [-clock clock_list]    (List of relative clocks)
#         [-min]                 (Specify clock min condition latency)
#         [-max]                 (Specify clock max condition latency)
#         [-rise]                (Specify clock rise latency)
#         [-fall]                (Specify clock fall latency)
#         [-source]              (Specify clock source latency)
#         [-dynamic dynamic_value]
#                                (Specify dynamic component of source latency)
#         [-early]               (Specify clock early source latency)
#         [-late]                (Specify clock late source latency)
#         delay                  (Clock latency)
#         object_list            (List of clocks, ports or pins)
# 
set opts%set_clock_latency {
    -modes clock
    -corners str
    -scenarios str
    -clock clock
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    -source _noval
    -dynamic str
    -early _noval
    -late _noval
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_clock_sense    # Set clock sense
#         -positive              (Specify positive unate (non-inverting) clock sense)
#         -negative              (Specify negative unate (inverting) clock sense)
#         -stop_propagation      (Stop clock propagation from specified pins)
#         -logical_stop_propagation
#                                (Stop clock propagation from specified pins)
#         -pulse pulse_type      (Specify pulse clock sense: 
#                                 Values: rise_triggered_high_pulse, 
#                                 fall_triggered_high_pulse, 
#                                 rise_triggered_low_pulse, 
#                                 fall_triggered_low_pulse)
#         [-clocks clock_list]   (List of clocks)
#         pin_object_list        (List of pins, ports or cell timing arcs)
# 
set opts%set_clock_sense {
    -positive _noval
    -negative _noval
    -stop_propagation _noval
    -logical_stop_propagation _noval
    -pulse clock
    -clocks clock
    nkwarg_0 cell
}

# Usage: set_clock_transition    # Capture predicted clock transition
#         [-modes mode_list]     (set clock transition for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set clock transition for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set clock transition for these scenarios)
#         [-min]                 (Set minimum transition only)
#         [-max]                 (Set maximum transition only)
#         [-rise]                (Set rise transition only)
#         [-fall]                (Set fall transition only)
#         transition             (Transition time of clock pins: 
#                                 Value >= 0)
#         clock_list             (List of clocks)
# 
set opts%set_clock_transition {
    -modes clock
    -corners str
    -scenarios str
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    nkwarg_0 num
    nkwarg_1 clock
}

# Usage: set_clock_uncertainty    # Capture actual or predicted clock skew
#         [-modes mode_list]     (set uncertainty for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set uncertainty for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set uncertainty for these scenarios)
#         [-from from_clock]     (List of from clocks)
#         [-rise_from rise_from_clock]
#                                (List of from clocks with rising edge)
#         [-fall_from fall_from_clock]
#                                (List of from clocks with falling edge)
#         [-to to_clock]         (List of to clocks)
#         [-rise_to rise_to_clock]
#                                (List of to clocks with rising edge)
#         [-fall_to fall_to_clock]
#                                (List of to clocks with falling edge)
#         [-rise]                (Inter-clock uncertainty is for rising clock edge)
#         [-fall]                (Inter-clock uncertainty is for falling clock edge)
#         [-setup]               (Clock uncertainty is for setup checks)
#         [-hold]                (Clock uncertainty is for hold checks)
#         uncertainty            (Clock uncertainty)
#         [object_list]          (List of clocks, ports or pins)
# 
set opts%set_clock_uncertainty {
    -modes str
    -corners str
    -scenarios str
    -from clock
    -rise_from clock
    -fall_from clock
    -to clock
    -rise_to clock
    -fall_to clock
    -rise _noval
    -fall _noval
    -setup _noval
    -hold _noval
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_false_path    # Define a false path
#         [-hold]                (Eliminate hold timing analysis for paths)
#         [-setup]               (Eliminate setup timing analysis for paths)
#         [-rise]                (Eliminate only rising delays for the defined paths)
#         [-fall]                (Eliminate only falling delays for the defined paths)
#         [-reset_path]          (Reset this path before setting false path)
#         [-comment comment]     (User specified comment)
#         [-from from_list]      (List of path startpoints or clocks)
#         [-rise_from rise_from_list]
#                                (Apply to paths rising from the list of startpoints or clocks)
#         [-fall_from fall_from_list]
#                                (Apply to paths falling from the list of startpoints or clocks)
#         [-through through_list]
#                                (List of through pins, ports, cells or nets)
#         [-rise_through rise_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-fall_through fall_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-to to_list]          (List of path endpoints or clocks)
#         [-rise_to rise_to_list]
#                                (Apply to paths with rise transition at the list of path endpoints or clocks)
#         [-fall_to fall_to_list]
#                                (Apply to paths with fall transition at the list of path endpoints or clocks)
# 
set opts%set_false_path {
    -hold _noval
    -setup _noval
    -rise _noval
    -fall _noval
    -reset_path _noval
    -comment str
    -from clock
    -rise_from clock
    -fall_from clock
    -through cell
    -rise_through cell
    -fall_through cell
    -to clock
    -rise_to clock
    -fall_to clock
}

# Usage: set_ideal_latency    # Specifies ideal latency
#         [-min]                 (Min ideal latency)
#         [-max]                 (Max ideal latency)
#         [-rise]                (Rise ideal latency)
#         [-fall]                (Fall ideal latency)
#         value                  (Ideal latency value: 
#                                 Value >= 0)
#         object_list            (List of pins or ports)
# 
set opts%set_ideal_latency {
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_ideal_transition    # Specifies ideal transition
#         [-min]                 (Min ideal transition)
#         [-max]                 (Max ideal transition)
#         [-rise]                (Rise ideal transition)
#         [-fall]                (Fall ideal transition)
#         value                  (Ideal transition value: 
#                                 Value >= 0)
#         object_list            (List of pins or ports)
# 
set opts%set_ideal_transition {
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_input_delay    # Set input delay on ports or pins
#         [-modes mode_list]     (set input delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set input delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set input delay for these scenarios)
#         [-clock clock_name]    (Relative clock)
#         [-clock_fall]          (Delay is relative to falling edge of clock)
#         [-level_sensitive]     (Delay is from level-sensitive latch)
#         [-rise]                ( Specifies rising delay)
#         [-fall]                ( Specifies falling delay)
#         [-max]                 ( Specifies maximum delay)
#         [-min]                 ( Specifies minimum delay)
#         [-reference_pin pin_port_name]
#                                (Relative pin or port)
#         [-add_delay]           (Don't remove existing input delay)
#         [-network_latency_included]
#                                (Specifies network latency of clock already included)
#         [-source_latency_included]
#                                (Specifies source latency of clock already included)
#         delay_value            (Path delay)
#         port_pin_list          (List of ports and/or pins)
# 
set opts%set_input_delay {
    -modes str
    -corners str
    -scenarios str
    -clock clock
    -clock_fall _noval
    -level_sensitive _noval
    -rise _noval
    -fall _noval
    -max _noval
    -min _noval
    -reference_pin pin
    -add_delay _noval
    -network_latency_included _noval
    -source_latency_included _noval
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_max_delay    # Specify maximum delay for timing paths
#         [-rise]                (Delay value applies to rising paths)
#         [-fall]                (Delay value applies to falling paths)
#         [-reset_path]          (Reset this path first)
#         [-comment comment]     (User specified comment)
#         [-from from_list]      (List of path startpoints or clocks)
#         [-rise_from rise_from_list]
#                                (Apply to paths rising from the list of startpoints or clocks)
#         [-fall_from fall_from_list]
#                                (Apply to paths falling from the list of startpoints or clocks)
#         [-through through_list]
#                                (List of through pins, ports, cells or nets)
#         [-rise_through rise_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-fall_through fall_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-to to_list]          (List of path endpoints or clocks)
#         [-rise_to rise_to_list]
#                                (Apply to paths with rise transition at the list of path endpoints or clocks)
#         [-fall_to fall_to_list]
#                                (Apply to paths with fall transition at the list of path endpoints or clocks)
#         delay_value            (Delay value)
# 
set opts%set_max_delay {
    -rise _noval
    -fall _noval
    -reset_path _noval
    -comment str
    -from clock
    -rise_from clock
    -fall_from clock
    -through cell
    -rise_through cell
    -fall_through cell
    -to clock
    -rise_to clock
    -fall_to clock
    nkwarg_0 num
}

# Usage: set_min_delay    # Specify minimum delay for timing paths
#         [-rise]                (Delay value applies to rising paths)
#         [-fall]                (Delay value applies to falling paths)
#         [-reset_path]          (Reset this path first)
#         [-comment comment]     (User specified comment)
#         [-from from_list]      (List of path startpoints or clocks)
#         [-rise_from rise_from_list]
#                                (Apply to paths rising from the list of startpoints or clocks)
#         [-fall_from fall_from_list]
#                                (Apply to paths falling from the list of startpoints or clocks)
#         [-through through_list]
#                                (List of through pins, ports, cells or nets)
#         [-rise_through rise_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-fall_through fall_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-to to_list]          (List of path endpoints or clocks)
#         [-rise_to rise_to_list]
#                                (Apply to paths with rise transition at the list of path endpoints or clocks)
#         [-fall_to fall_to_list]
#                                (Apply to paths with fall transition at the list of path endpoints or clocks)
#         delay_value            (Delay value)
# 
set opts%set_min_delay {
    -rise _noval
    -fall _noval
    -reset_path _noval
    -comment str
    -from clock
    -rise_from clock
    -fall_from clock
    -through cell
    -rise_through cell
    -fall_through cell
    -to clock
    -rise_to clock
    -fall_to clock
    nkwarg_0 num
}

# Usage: set_multicycle_path    # Define a multicyle path
#         [-hold]                (Only hold multiplier is set)
#         [-setup]               (Only setup multiplier is set)
#         [-rise]                (Multiplier valid for rising delays on path endpoint)
#         [-fall]                (Multiplier valid for falling delays on path endpoint)
#         [-start]               (Multiplier measured against launch clock)
#         [-end]                 (Multiplier measured against capture clock)
#         [-reset_path]          (Reset this path before setting multicycle)
#         [-comment comment]     (User specified comment)
#         [-from from_list]      (List of path startpoints or clocks)
#         [-rise_from rise_from_list]
#                                (Apply to paths rising from the list of startpoints or clocks)
#         [-fall_from fall_from_list]
#                                (Apply to paths falling from the list of startpoints or clocks)
#         [-through through_list]
#                                (List of through pins, ports, cells or nets)
#         [-rise_through rise_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-fall_through fall_through_list]
#                                (Apply to paths rising through pins, ports, cells or nets)
#         [-to to_list]          (List of path endpoints or clocks)
#         [-rise_to rise_to_list]
#                                (Apply to paths with rise transition at the list of path endpoints or clocks)
#         [-fall_to fall_to_list]
#                                (Apply to paths with fall transition at the list of path endpoints or clocks)
#         path_multiplier        (Number of cycles)
# 
set opts%set_multicycle_path {
    -hold _noval
    -setup _noval
    -rise _noval
    -fall _noval
    -start _noval
    -end _noval
    -reset_path _noval
    -comment str
    -from clock
    -rise_from clock
    -fall_from clock
    -through cell
    -rise_through cell
    -fall_through cell
    -to clock
    -rise_to clock
    -fall_to clock
    nkwarg_0 num
}

# Usage: set_output_delay    # Set output delay on ports or pins
#         [-modes mode_list]     (set output delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set output delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set output delay for these scenarios)
#         [-clock clock_name]    (Relative clock)
#         [-clock_fall]          (Delay is relative to falling edge of clock)
#         [-level_sensitive]     (Delay is to level-sensitive latch)
#         [-rise]                ( Specifies rising delay)
#         [-fall]                ( Specifies falling delay)
#         [-max]                 ( Specifies maximum delay)
#         [-min]                 ( Specifies minimum delay)
#         [-reference_pin pin_port_name]
#                                (Relative pin or port)
#         [-add_delay]           (Don't remove existing output delay)
#         [-network_latency_included]
#                                (Specifies network latency of clock already included)
#         [-source_latency_included]
#                                (Specifies source latency of clock already included)
#         [-group_path group_name]
#                                (Name of group for paths)
#         delay_value            (Path delay)
#         port_pin_list          (List of ports and/or pins)
# 
set opts%set_output_delay {
    -modes str
    -corners str
    -scenarios str
    -clock clock
    -clock_fall _noval
    -level_sensitive _noval
    -rise _noval
    -fall _noval
    -max _noval
    -min _noval
    -reference_pin pin
    -add_delay _noval
    -network_latency_included _noval
    -source_latency_included _noval
    -group_path str
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_propagated_clock    # Specify propagated clock latency
#         object_list            (List of clocks, ports, or pins)
# 
set opts%set_propagated_clock {
    nkwarg_0 pin
}

# Usage: set_disable_timing    # Disable timing arcs
#         [-from from_pin_name]  (From pin on cell)
#         [-to to_pin_name]      (To pin on cell)
#         [-loop_break]          (indicate whether constraints coming from tool, not user)
#         object_list            (List of cells, ports, lib_cells, lib_pins, timing_arcs or lib_timing_arcs)
# 
set opts%set_disable_timing {
    -from clock
    -to clock
    -loop_break _noval
    nkwarg_0 lib_cell
}

# Usage: set_max_time_borrow    # Limit time borrowing for latches
#         [-modes mode_list]     (set max_time_borrow for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set max_time_borrow for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set max_time_borrow for these scenarios)
#         delay_value            (Limit value for borrowing: 
#                                 Value >= 0)
#         object_list            (List of clocks, cells, data pins or clock pins)
# 
set opts%set_max_time_borrow {
    -modes str
    -corners str
    -scenarios str
    nkwarg_0 num
    nkwarg_1 cell
}

# Usage: create_voltage_area    # Create a voltage_area in the current design
#         -power_domains domain_list
#                                (Name or collection of the associated power_domains)
#         [-power supply_net]    (power supply_net of this voltage_area)
#         [-ground supply_net]   (ground supply_net of this voltage_area)
#         [-cells cell_list]     (Cells to be included in the voltage_area)
#         [-region geometry]     (rectangles and polygons for this voltage_area)
#         [-guard_band width]    (guard_band widths in horizontal and vertical directions)
#         [-is_fixed]            (Set the voltage_area location as fixed)
#         [-merge_regions]       (Merge abutted and overlapping regions)
#         [-target_utilization utilization]
#                                (Required target utilization: 
#                                 Range: 0.1 to 1)
#         [-name voltage_area_name]
#                                (Name for the voltage_area)
#         [-cell cell]           (Specifies the physical cell where the voltage area is to be added)
# 
set opts%create_voltage_area {
    -power_domains str
    -power net
    -ground net
    -cells str
    -region str
    -guard_band str
    -is_fixed _noval
    -merge_regions _noval
    -target_utilization str
    -name str
    -cell cell
}

# Usage: set_case_analysis    # Specify case analysis value on ports or pins
#         value                  (Logic or transition value: 
#                                 Values: 0, 1, fall, falling, one, rise, 
#                                 rising, zero)
#         port_or_pin_list       (List of ports or pins)
# 
set opts%set_case_analysis {
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_drive    # Set port drive resistance
#         [-modes mode_list]     (set drive resistance for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set drive resistance for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set drive resistance for these scenarios)
#         [-min]                 (Set minimum resistance only)
#         [-max]                 (Set maximum resistance only)
#         [-rise]                (Set rise resistance only)
#         [-fall]                (Set fall resistance only)
#         resistance             (Port drive resistance: 
#                                 Value >= 0)
#         port_list              (List of input ports)
# 
set opts%set_drive {
    -modes str
    -corners str
    -scenarios str
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    nkwarg_0 str
    nkwarg_1 port
}

# Usage: set_driving_cell    # Set port driving cell
#         [-modes mode_list]     (set driving cell for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set driving cell for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set driving cell for these scenarios)
#         -lib_cell lib_cell_name
#                                (Library cell)
#         [-min]                 (Set minimum driving_cell info)
#         [-max]                 (Set maximum driving_cell info)
#         [-rise]                (Set rise driving_cell info)
#         [-fall]                (Set fall driving_cell info)
#         [-library lib_name]    (Library of driving cell)
#         [-pin pin_name]        (Driving pin name)
#         [-from_pin from_pin_name]
#                                (From pin on driving cell)
#         [-multiply_by factor]  (Driving strength multiplier: 
#                                 Value >= 0)
#         [-dont_scale]          (Prevent operating condition scaling)
#         [-no_design_rule]      (Do not infer design rules from driving cell)
#         [-input_transition_rise rtrans]
#                                (Rise input transition: 
#                                 Value >= 0)
#         [-input_transition_fall ftrans]
#                                (Fall input transition: 
#                                 Value >= 0)
#         [-clock clock_name]    (Transition is relative to this clock)
#         [-clock_fall]          (Transition is relative to falling edge of the clock)
#         port_list              (List of input ports)
# 
set opts%set_driving_cell {
    -modes cell
    -corners str
    -scenarios str
    -lib_cell lib_cell
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    -library lib
    -pin pin
    -from_pin pin
    -multiply_by num
    -dont_scale _noval
    -no_design_rule _noval
    -input_transition_rise num
    -input_transition_fall str
    -clock clock
    -clock_fall _noval
    nkwarg_0 port
}

# Usage: set_fanout_load    # Set fanout load for ports
#         value                  (Fanout load: 
#                                 Value >= 0)
#         port_list              (List of output ports)
# 
set opts%set_fanout_load {
    nkwarg_0 num
    nkwarg_1 port
}

# Usage: set_input_transition    # Set port transition time
#         [-modes mode_list]     (set transition for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set transition for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set transition for these scenarios)
#         [-min]                 (Set minimum transition only)
#         [-max]                 (Set maximum transition only)
#         [-rise]                (Set rise transition only)
#         [-fall]                (Set fall transition only)
#         [-clock clock_name]    (Transition is relative to this clock)
#         [-clock_fall]          (Transition is relative to falling edge of the clock)
#         transition             (Port transition: 
#                                 Value >= 0)
#         port_list              (List of input ports)
# 
set opts%set_input_transition {
    -modes str
    -corners str
    -scenarios str
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    -clock clock
    -clock_fall _noval
    nkwarg_0 num
    nkwarg_1 port
}

# Usage: set_ideal_network    # Set an ideal network
#         [-no_propagate]        (Don't propagate through logic cells)
#         object_list            (List of ports, pins, or nets)
# 
set opts%set_ideal_network {
    -no_propagate _noval
    nkwarg_0 pin
}

# Usage: set_load    # Set capacitance on ports and nets
#         [-min]                 (Specify the minimum capacitance value)
#         [-max]                 (Specify the maximum capacitance value)
#         [-rise]                (Specify the rise capacitance value (for ports only))
#         [-fall]                (Specify the fall capacitance value (for ports only))
#         [-pin_load]            (Pin capacitance (for ports only))
#         [-wire_load]           (Wire capacitance (for ports only))
#         [-subtract_pin_load]   (Subtract pin capacitance from value (nets only))
#         value                  (Capacitance value)
#         objects                (List of ports)
# 
set opts%set_load {
    -min _noval
    -max _noval
    -rise _noval
    -fall _noval
    -pin_load _noval
    -wire_load _noval
    -subtract_pin_load _noval
    nkwarg_0 num
    nkwarg_1 port
}

# Usage: set_max_capacitance    # Set maximum capacitance for ports or designs
#         [-modes mode_list]     (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set DRC limit for these scenarios)
#         [-clock_path]          (Specify clock path)
#         [-data_path]           (Specify data path)
#         [-db string]           (Specify db library path for lib_pins)
#         value                  (Capacitance limit: 
#                                 Value >= 0)
#         object_list            (List of clocks, ports, lib_pins or designs)
# 
set opts%set_max_capacitance {
    -modes str
    -corners str
    -scenarios str
    -clock_path _noval
    -data_path _noval
    -db pin
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_max_fanout    # Set maximum fanout for ports or designs
#         value                  (Fanout limit: 
#                                 Value >= 0)
#         object_list            (List of ports or designs)
# 
set opts%set_max_fanout {
    nkwarg_0 num
    nkwarg_1 port
}

# Usage: set_max_transition    # Set maximum transition for ports or designs
#         [-modes mode_list]     (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set DRC limit for these scenarios)
#         [-clock_path]          (Specify clock path)
#         [-data_path]           (Specify data path)
#         [-db string]           (Specify db library path for lib_pins)
#         value                  (Transition limit: 
#                                 Value >= 0)
#         object_list            (List of clocks, ports, lib_pins or designs)
# 
set opts%set_max_transition {
    -modes str
    -corners str
    -scenarios str
    -clock_path _noval
    -data_path _noval
    -db pin
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_min_capacitance    # Set minimum capacitance for ports or designs
#         [-modes mode_list]     (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
#         [-corners corner_list] (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
#         [-scenarios scenario_list]
#                                (set DRC limit for these scenarios)
#         [-clock_path]          (Specify clock path)
#         [-data_path]           (Specify data path)
#         [-db string]           (Specify db library path for lib_pins)
#         value                  (Capacitance limit: 
#                                 Value >= 0)
#         object_list            (List of ports, lib_pins or designs)
# 
set opts%set_min_capacitance {
    -modes str
    -corners str
    -scenarios str
    -clock_path _noval
    -data_path _noval
    -db pin
    nkwarg_0 num
    nkwarg_1 pin
}

# Usage: set_operating_conditions    # Set process, temperature, and voltage (for backwards compatibility)
#         [-analysis_type type]  (Analysis type (unused): 
#                                 Values: bc_wc, on_chip_variation, 
#                                 single)
#         [-min min_condition]   (Min operating condition name)
#         [-max max_condition]   (Max operating condition name)
#         [-library lib]         (.db library name to search)
#         [-min_library min_lib] (.db library name to search for min condition)
#         [-max_library max_lib] (.db library name to search for max condition)
#         [-object_list object_list]
#                                (Cells and ports to set operating conditions on)
#         [condition]            (Single operating condition name)
# 
set opts%set_operating_conditions {
    -analysis_type str
    -min str
    -max str
    -library lib
    -min_library lib
    -max_library lib
    -object_list cell
    nkwarg_0 str
}

# Usage: set_units
#         [-time    [optional float][optional scale_value]s]
#         [-capacitance  [optional float][optional scale_value]F]
#         [-resistance   [optional float][optional scale_value]Ohm]
#         [-voltage [optional float][optional scale_value]V]
#         [-current [optional float][optional scale_value]A]
#         [-power   [optional float][optional scale_value]W]
set opts%set_units {
    -time str
    -capacitance str
    -resistance str
    -voltage str
    -current str
    -power str
}

# Usage: set_voltage    # Set design/cell/supply_net voltage
#         [-min voltage]         (min voltage)
#         [-dynamic voltage]     (dynamic voltage (ignored))
#         [-min_dynamic voltage] (min dynamic voltage (ignored))
#         [-corners corner_list] (List of corners)
#         [-object_list object_list]
#                                (List of ports, cells, supply nets, and/or supply ports)
#         [-cell cell]           (Cell instance (ignored))
#         [-pg_pin_name pg_pin]  (Name of cell pg pin (ignored))
#         voltage                (voltage)
# 
set opts%set_voltage {
    -min str
    -dynamic str
    -min_dynamic str
    -corners str
    -object_list cell
    -cell str
    -pg_pin_name cell
    nkwarg_0 str
}

